 # CI configuration for Windows tests on appveyor
 # Based on Olivier Grisel's python-appveyor-demo
environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\dev\\appveyor\\run_with_env.cmd"
  BINSTAR_TOKEN:
    secure: klmXk7cEWggc+zHCSyZFYaJLw6xvRwUFgKSeGgiw0HWZJuLiM3qgYA6Nhj1fHk7s

  matrix:
#    - PYTHON: "C:\\Python27-conda32"
#      PYTHON_VERSION: "2.7.8"
#      PYTHON_ARCH: "32"
#      STANDALONE: "FALSE"
#
#    - PYTHON: "C:\\Python27-conda64"
#      PYTHON_VERSION: "2.7.8"
#      PYTHON_ARCH: "64"
#      STANDALONE: "FALSE"
#
#    - PYTHON: "C:\\Python34-conda32"
#      PYTHON_VERSION: "3.4.1"
#      PYTHON_ARCH: "32"
#      STANDALONE: "FALSE"
#
#    - PYTHON: "C:\\Python34-conda64"
#      PYTHON_VERSION: "3.4.1"
#      PYTHON_ARCH: "64"
#      STANDALONE: "FALSE"
#
#    - PYTHON: "C:\\Python27-conda32"
#      PYTHON_VERSION: "2.7.8"
#      PYTHON_ARCH: "32"
#      STANDALONE: "TRUE"
#
#    - PYTHON: "C:\\Python27-conda64"
#      PYTHON_VERSION: "2.7.8"
#      PYTHON_ARCH: "64"
#      STANDALONE: "TRUE"

    # The following will build conda packages
    - PYTHON: 'C:\Python27-conda32'
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "32"
      CONDA_PY: "27"
      CONDA_NPY: "19"
      CONDA_BUILD: "TRUE"

    - PYTHON: 'C:\Python27-conda64'
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "64"
      CONDA_PY: "27"
      CONDA_NPY: "19"
      CONDA_BUILD: "TRUE"

    - PYTHON: 'C:\Python34-conda32'
      PYTHON_VERSION: "3.4"
      PYTHON_ARCH: "32"
      CONDA_PY: "34"
      CONDA_NPY: "19"
      CONDA_BUILD: "TRUE"

    - PYTHON: 'C:\Python34-conda64'
      PYTHON_VERSION: "3.4"
      PYTHON_ARCH: "64"
      CONDA_PY: "34"
      CONDA_NPY: "19"
      CONDA_BUILD: "TRUE"

install:
  # Install Python and miniconda
  - 'powershell .\dev\continuous-integration\appveyor\install_python.ps1'
  # Add the paths
  - 'set PATH=%PYTHON%;%PYTHON%/Scripts;%PATH%'

  # Check that we have the expected version and architecture for Python
  - 'python --version'
  - 'python -c "import struct; print(struct.calcsize(''P'') * 8)"'

  # Install the build dependencies of the project via conda
  - 'conda install --yes --quiet numpy scipy nose sphinx sympy pyparsing jinja2 ipython setuptools cython'
  - 'pip install py-cpuinfo'
  - 'IF "%CONDA_BUILD%" == "TRUE" (conda install --yes --quiet conda-build==1.4.0 binstar pip)'

build: false  # Not a C# project, build stuff at the test step instead.

test_script:
  # Run the test suite
  - '%CMD_IN_ENV% python -c "import sys; print(sys.executable)"'
  - 'IF "%CONDA_BUILD%" == "TRUE" (
          %CMD_IN_ENV% conda build dev\conda-recipe --quiet &
          python dev\continuous-integration\move-conda-package.py dev\conda-recipe
     ) ELSE (
         %CMD_IN_ENV% python setup.py install &
         if "%STANDALONE%" == "TRUE" (
             %CMD_IN_ENV% python .\dev\tools\run_nose_tests_standalone.py
         ) ELSE (
             %CMD_IN_ENV% python .\dev\tools\run_nose_tests.py
         )
     )'

artifacts:
  # Archive the generated conda package in the ci.appveyor.com build report.
  - path: '*.tar.bz2'

on_success:
  # Upload built binaries to binstar.org. The globbing and handling of the
  # exit-status code is tricky in cmd.exe or powershell, so we're just using
  # a python script.
  - python dev\continuous-integration\binstar-push.py
